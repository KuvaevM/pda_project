
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'grammarsEMPTY EQ NONTERMINAL PIPE SEP START TERMINALgrammars : START RulesRules : Bind\n             | Rules BindBind : NONTERMINAL EQ Enumeration SEPEnumeration : Enumeration PIPE Sequence\n                   | SequenceSequence : Single\n                | Sequence SingleSingle : EMPTYSingle : TERMINALSingle : NONTERMINAL'
    
_lr_action_items = {'START':([0,],[2,]),'$end':([1,3,4,6,14,],[0,-1,-2,-3,-4,]),'NONTERMINAL':([2,3,4,6,7,8,10,11,12,13,14,15,16,17,],[5,5,-2,-3,8,-11,8,-7,-9,-10,-4,8,-8,8,]),'EQ':([5,],[7,]),'EMPTY':([7,8,10,11,12,13,15,16,17,],[12,-11,12,-7,-9,-10,12,-8,12,]),'TERMINAL':([7,8,10,11,12,13,15,16,17,],[13,-11,13,-7,-9,-10,13,-8,13,]),'SEP':([8,9,10,11,12,13,16,17,],[-11,14,-6,-7,-9,-10,-8,-5,]),'PIPE':([8,9,10,11,12,13,16,17,],[-11,15,-6,-7,-9,-10,-8,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'grammars':([0,],[1,]),'Rules':([2,],[3,]),'Bind':([2,3,],[4,6,]),'Enumeration':([7,],[9,]),'Sequence':([7,15,],[10,17,]),'Single':([7,10,15,17,],[11,16,11,16,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> grammars","S'",1,None,None,None),
  ('grammars -> START Rules','grammars',2,'p_grammar','parse.py',159),
  ('Rules -> Bind','Rules',1,'p_rules','parse.py',164),
  ('Rules -> Rules Bind','Rules',2,'p_rules','parse.py',165),
  ('Bind -> NONTERMINAL EQ Enumeration SEP','Bind',4,'p_bind','parse.py',173),
  ('Enumeration -> Enumeration PIPE Sequence','Enumeration',3,'p_enumeration','parse.py',178),
  ('Enumeration -> Sequence','Enumeration',1,'p_enumeration','parse.py',179),
  ('Sequence -> Single','Sequence',1,'p_sequence','parse.py',187),
  ('Sequence -> Sequence Single','Sequence',2,'p_sequence','parse.py',188),
  ('Single -> EMPTY','Single',1,'p_empty','parse.py',196),
  ('Single -> TERMINAL','Single',1,'p_terminal','parse.py',201),
  ('Single -> NONTERMINAL','Single',1,'p_nonterminal','parse.py',206),
]
